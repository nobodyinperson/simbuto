#!/usr/bin/env python3
import sys, os
import logging

logger = logging.getLogger(__name__)

####################
### LIBRARY PATH ###
####################
# add /usr/lib/simbuto/python to the module paths
sys.path.insert(1,"/usr/lib/simbuto/python")
import simbuto.config

################
### LANGUAGE ###
################
simbuto.config.install_language_globally()

#####################
### CONFIGURATION ###
#####################
# make sure, there is a personal configuration folder
logger.debug(_("making sure there is a ~/.simbuto folder"))
simbuto.config.make_sure_there_is_simbuto_dotfolder()
config = simbuto.config.get_personal_configuration()
config.read(["/etc/simbuto/conf/gui.conf"])

####################
### Logger setup ###
####################
simbuto.config.setup_logger_from_config(logger = logger, 
    section="logging", config = config)


logger.info(_("This is simbuto."))
logger.debug(_("command-line: {}").format(sys.argv))
logger.warning(_("simbuto is still in early development phase..."))

#####################
### SignalManager ###
#####################
import simbuto.signalmanager
# a signal manager
signalmanager = simbuto.signalmanager.SignalManager()
# set the logger
signalmanager.logger = logger
# add signals
signalmanager.add_signals(["save-to-file"])

######################
### SimbutoManager ###
######################
import simbuto.manager
# a signal manager
manager = simbuto.manager.SimbutoManager()
# set the logger
manager.logger = logger
# set the signalmanager
manager.signalmanager = signalmanager
# connect signals
signalmanager.connect_to_signal(
    name="read-from-file", action = manager.read_text_from_file)
signalmanager.connect_to_signal(
    name="save-to-file", action = manager.save_text_to_file)
signalmanager.connect_to_signal(
    name="md5sum-of-file", action = manager.md5sum_of_file)

###########
### Gui ###
###########
import simbuto.gui
# a gui
gui = simbuto.gui.SimbutoGui()
# set the logger
gui.logger = logger
# set the signalmanager
gui.signalmanager = signalmanager
# set the config
gui.set_config(config)
# set up the gui
gui.setup_gui()

try:
    filename = sys.argv[1]
    logger.info(_("specified file to open via command line: {}").format(
        filename))
    gui.fill_editor_from_file(filename)
except IndexError:
    logger.info(_("no file specified to open via command line"))

# run the gui
gui.run()
